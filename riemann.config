; -*- mode: clojure; -*-
; vim: filetype=clojure
(require 'clojure.edn)

(logging/init {:file "riemann.log"})

; Listen on the local interface over TCP (5555) and UDP (5555)
(let [host "127.0.0.1"]
  (tcp-server  {:host host})
  (udp-server  {:host host}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(def config (try
              (clojure.edn/read-string (slurp "./env.config.edn"))
              (catch Exception e (hash-map))))

(def delimiter ".")

;; Main stream wiring...

(let [index (default :ttl 30 (tap :index (index)))
      logstash-emit (tag "seen-by-riemann" (logstash {:host (get-in config [:logstash :host] "logging") :port 5665 :protocol :tcp :block-start true :pool-size 1}))]
  
  (riemann.time/every! 5 #(logstash-emit (event {:service "riemann-is-alive"})))

  (streams
    (where (service "send-to-logstash") logstash-emit)
    
    (where (service "service-to-index") index)
))
